%YAML 1.1
---
$schema: http://json-schema.org/draft-07/schema
$id: http://stsci.edu/schemas/yaml-schema/draft-02
title:
  YAML Schema
description: |
  A metaschema extending JSON Schema's metaschema to add support for
  some YAML-specific constructions.
allOf:
  - $ref: http://json-schema.org/draft-07/schema
  - type: object
    properties:
      propertyOrder:
        description: |
          Specifies the default order of the properties when writing
          out. Any keys not listed in **propertyOrder** will be in
          arbitrary order at the end. This field applies only to nodes with
          **object** type.
        type: array
        items:
          type: string

      flowStyle:
        description: |
          Specifies the default serialization style to use for an
          array or object.  YAML supports multiple styles for
          arrays/sequences and objects/maps, called "block style" and
          "flow style".  For example::

            Block style: !!map
              Clark : Evans
              Ingy  : döt Net
              Oren  : Ben-Kiki

            Flow style: !!map { Clark: Evans, Ingy: döt Net, Oren: Ben-Kiki }

          This property gives a hint to the tool outputting the YAML
          which style to use.  If not provided, the library is free to
          use whatever heuristics it wishes to determine the output
          style.  This property does not enforce any particular style
          on YAML being parsed.
        type: string
        enum: [block, flow]

      style:
        description: |
          Specifies the default serialization style to use for a string.
          YAML supports multiple styles for strings:

          ```yaml
            Inline style: "First line\nSecond line"

            Literal style: |
              First line
              Second line

            Folded style: >
              First
              line

              Second
              line
          ```

          This property gives a hint to the tool outputting the YAML
          which style to use.  If not provided, the library is free to
          use whatever heuristics it wishes to determine the output
          style.  This property does not enforce any particular style
          on YAML being parsed.
        type: string
        enum: [inline, literal, folded]
...
